<!-- <div class = "logo">
	<img src = "http://berserk.ru/image/berserk/logo.png">
</div>
<div class = "logo2">
	<img src = "http://berserk.ru/image/data/sins_logo.png">
</div> -->
<div class = "fluid-container">
	<div class = "col-md-2 block"><div class = 'inside-block'>
		<div class = "logo-container row">
			<div class = 'logo-block'>
				<img src = "http://berserk.ru/image/berserk/logo.png"/>
			</div>
			<div class = 'logo-block'>
				<img src="http://berserk.ru/image/data/sins_logo.png"/>	
			</div>
		</div>
		<!--button onclick = "generatePack()">Новый бустер</button-->
		<%= link_to 'Новый драфт', generate_path(:set_id => 1), remote: true, :class => "header-button" %>
		<a onclick = 'emptyCardlist()' class = 'header-button'>Очистить колоду</a>
	</div></div>
	<div class = "col-md-8 block">
		<div class = 'inside-block row card-container'>
		</div>
	</div>
	<div class = "col-md-2 block">
		<div class = 'inside-block card-list'>
			<span class = 'card-list__title'>
				Моя колода
			</span>
			<div class = 'card-list__list-container'>
				<ul class = 'card-list__list'>
				</ul>
			</div>
		</div>
	</div>
</div>
<div class = 'zoom-card'></div>

<script type="text/javascript">
	let cards = [];
	let pickedCards = [];
	let packsArray = [];
	let currentPackIndex = 0;
	let currentRound = 0;
	let packAmount = 8;
	let maxRounds = 4;

	$(document).ready( () => {
		initCards();

		// for(let i = 0; i < 50; i++){
		// 	$('.card-list__list').append('<li>test</li>');
		// }
		
		// drawCards();

			// $('.zoom-card').empty();
			// $('.zoom-card').append("<img src = '" + src + "'/>");
			// $('.zoom-card').show();
	});

	function drawCards(){
		$('.card-container').empty();
		hideZoomCard();

		if(currentRound >= maxRounds) return;

		packsArray[currentRound][currentPackIndex].forEach( (card, index) => {
			let currentCard = 'packsArray[' + currentRound + '][' + currentPackIndex + '][' + index + ']';
			$('.card-container').append('<div class = "col card" ><div class = "card-img" onclick = "pick_card(' + currentCard + ')"><img src= ' + card.img_url + ' onmouseenter = "showCardPreview(' + currentCard + '.img_url)" onmouseout = "hideZoomCard()"></div></div>');
		});
	}

	//Обработка выбора игроком карты из бустера
	function pick_card(card){
		let _card = {
			name: card.name,
			cost: card.cost,
			amount: 1,
			img_url: card.img_url
		}
		pickedCards.push(_card);
		formCardList();

		let i = packsArray[currentRound][currentPackIndex].findIndex( (element) => {
			return element == card;
		});

		removeCardFromPack(packsArray[currentRound][currentPackIndex], i);
		botPicksCard();

		currentPackIndex++;
		if(currentPackIndex >= 8) currentPackIndex = 0;

		if(packsArray[currentRound][currentPackIndex].length == 0){
			currentRound++;
		}

		drawCards();
	}

	//Алгоритм автоматического пика карт из бустеров
	function botPicksCard(){
		packsArray[currentRound].forEach( (pack, index) => {
			if(currentPackIndex == index) return;

			let botPickedCardIndex;

			for(let i = 5; i > 0; i--){
				pack.some( (card, _index) => {
					if(card.rate == i){
						botPickedCardIndex = _index;
						return true;
					}
					return false;
				});
				if(botPickedCardIndex !== undefined) break;
			}
			// console.log(botPickedCardIndex);

			// botPickedCardIndex = Math.random() * pack.length;
			console.log(removeCardFromPack(pack, botPickedCardIndex)[0].name);
		});
	}

	function removeCardFromPack(pack, index){
		let result = pack.splice(index, 1)
		// console.log(result.name);
		return result;
	}

	//Сортировка и вывод списка выбранных игроком карт
	function formCardList(){
		$('.card-list__list').empty();

		pickedCards.sort( (a, b) => {
			if(a.cost > b.cost) return 1;
			if(a.cost < b.cost) return -1;

			if(a.name > b.name) return 1;
			if(a.name < b.name) return -1;
   		});

   		let finalList = [];

   		for(let i = 0; i < pickedCards.length; i++){
   			card = pickedCards[i];

   			if(finalList.length == 0) {
   				finalList.push(card);
   			} else {
   				let lastItem = finalList[finalList.length - 1];

	   			if(lastItem.name == card.name){
	   				lastItem.amount += card.amount;
	   			} else {
	   				finalList.push(card);
	   			}
   			}
   		}

   		pickedCards = finalList;

   		pickedCards.forEach( (card) => {
   			let amount = (card.amount && card.amount > 1) ? " x" + card.amount : ""
   			$('.card-list__list').append('<li class = "card-list__item" onmouseenter = "showCardPreview(\'' + card.img_url + '\')" onmouseout = "hideZoomCard()"><div class = "card-list__item-name">' + card.name + '</div><div class = "card-list__item-amount">' + amount + '</div><div class = "card-list__item-cost">' + card.cost + '</div></li>');
   		});
	}

	function initCards(){
		packsArray = [];
		let _pack;
		let _round;
		<% @cards.each do |round| %>
			_round = [];
			<% round.each do |pack| %>
				_pack = [];
				<% pack.each do |card| %>
					_pack.push({
						name: '<%= card.name %>',
						cost: <%= card.cost %>,
						img_url: '<%= card.card_url %>',
						rate: <%= card.rate %> 
					});
				<% end %>
				_round.push(_pack);
			<% end %>
			packsArray.push(_round);
		<% end %>

		drawCards();

		console.log(packsArray);
	}

	function showCards(){
		console.log(cards);
	}

	function showCardPreview(url){
		if(window.innerWidth <= 992) return;

		// console.log(url);
		posx = window.event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
		if(posx > window.innerWidth * 2 / 3){
			posx -= 300;
		}
	    posy = window.event.clientY + document.body.scrollTop + document.documentElement.scrollTop; 
	    if(posy > window.innerHeight / 2){
			posy -= 300;
		}

		$('.zoom-card').empty();
		$('.zoom-card').append("<img src = '" + url + "'/>");
		$('.zoom-card').css( 'top', posy);
		$('.zoom-card').css( 'left', posx);
		$('.zoom-card').show();
	}

	function emptyCardlist(){
		pickedCards = [];
		$('.card-list__list').empty();
	}

	function hideZoomCard(){
		$('.zoom-card').hide();
	}
</script>