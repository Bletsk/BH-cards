<div class = "mobile-view">
	<div class = "mobile-view__header">
		<div class = 'mobile-view__logo-container'>
			<%= image_tag "logo1.png" %>
		</div>
		<div class = 'mobile-view__title-container'>
			<div class = 'mobile-view__title'>Берсерк.Герои</div>
			<div class = 'mobile-view__title-small'>Симулятор драфта</div>
		</div>
		<div class = 'mobile-view__menu-icon' onclick = "alert('Функция еще в разработке!')"><%= image_tag "menu-button.png"%></div>
	</div>
	<div class = "mobile-view__footer">
		<div id = 'footer-tab-0' class = "mobile-view__footer-tab active-tab" onclick = "selectDraftTab()"><span>Драфт</span></div>
		<div id = 'footer-tab-1' class = "mobile-view__footer-tab" onclick = "selectDeckTab()"><span>Колода</span></div>
		<div id = 'footer-tab-2' class = "mobile-view__footer-tab" onclick = "selectHeroTab()"><span>Герои</span></div>
	</div>
	<div class = "mobile-view__body">
		<div class = 'mobile-view__status'>
			<div class = 'mobile-view__current-booster'>Текущий бустер: <b>1/4</b></div>
			<div class = 'mobile-view__current-pick'>Текущий пик: <b>1/15</b></div>
			<div class = 'mobile-view__pick-help'>(нажмите на изображение карты, чтобы взять ее в колоду)</div>
		</div>
		<div class = "mobile-view__draft-container">
			<div class = 'mobile-view__draft-main'></div>
			<div class = 'mobile-view__draft-nav'></div>
		</div>
		<div class = 'mobile-view__deck-container'>
			<ul class = 'mobile-view__card-list'></ul>
		</div>
		<div class = 'mobile-view__hero-container'></div>
	</div>
	
</div>

<script type="text/javascript">
	let cards = [];
	let pickedCards = [];
	let packsArray = [];

	let currentPackIndex = 0;
	let currentRound = 0;
	let packAmount = 8;
	let maxRounds = 4;

	let availableHeroes = [];

	$(document).ready( () => {
		let viewportHeight = $('.mobile-view').outerHeight();
		$('.mobile-view').css({ height: viewportHeight });
		initCards();
	});

	function drawCards(){
		$('.mobile-view__draft-main').flickity('destroy');
		$('.mobile-view__draft-main').empty();
		$('.mobile-view__draft-nav').flickity('destroy');
		$('.mobile-view__draft-nav').empty();
		hideZoomCard();

		if(currentRound >= maxRounds) return;

		packsArray[currentRound][currentPackIndex].forEach( (card, index) => {
			let currentCard = 'packsArray[' + currentRound + '][' + currentPackIndex + '][' + index + ']';
			$('.mobile-view__draft-main').append('<div class = "mobile-view__card" ><div class = "card-img" onclick = "pick_card(' + currentCard + ')"><img src= ' + card.img_url + '></div></div>');
			$('.mobile-view__draft-nav').append('<div class = "mobile-view__nav-card" ><div class = "card-img"><img src= ' + card.img_url + '></div></div>');
		});

		$('.mobile-view__current-pick').html('Текущий пик: <b>' + ( 16 - packsArray[currentRound][currentPackIndex].length) + '/15</b>');

		flickIt();
	}

	//Обработка выбора игроком карты из бустера
	function pick_card(card){
		let _card = {
			name: card.name,
			cost: card.cost,
			amount: 1,
			img_url: card.img_url
		}
		pickedCards.push(_card);
		formCardList();

		let i = packsArray[currentRound][currentPackIndex].findIndex( (element) => {
			return element == card;
		});

		removeCardFromPack(packsArray[currentRound][currentPackIndex], i);
		botPicksCard();

		currentPackIndex++;
		if(currentPackIndex >= 8) currentPackIndex = 0;

		if(packsArray[currentRound][currentPackIndex].length == 0){
			currentRound++;
			$('.mobile-view__current-booster').html('Текущий бустер: <b>' + (currentRound + 1) + '/4</b>')
		}

		drawCards();
	}

	//Алгоритм автоматического пика карт из бустеров
	function botPicksCard(){
		packsArray[currentRound].forEach( (pack, index) => {
			if(currentPackIndex == index) return;

			let botPickedCardIndex;

			for(let i = 5; i > 0; i--){
				pack.some( (card, _index) => {
					if(card.rate == i){
						botPickedCardIndex = _index;
						return true;
					}
					return false;
				});
				if(botPickedCardIndex !== undefined) break;
			}
			// console.log(botPickedCardIndex);

			// botPickedCardIndex = Math.random() * pack.length;
			console.log(removeCardFromPack(pack, botPickedCardIndex)[0].name);
		});
	}

	function removeCardFromPack(pack, index){
		let result = pack.splice(index, 1)
		// console.log(result.name);
		return result;
	}

	//Сортировка и вывод списка выбранных игроком карт
	function formCardList(){
		$('.mobile-view__card-list').empty();

		pickedCards.sort( (a, b) => {
			if(a.cost > b.cost) return 1;
			if(a.cost < b.cost) return -1;

			if(a.name > b.name) return 1;
			if(a.name < b.name) return -1;
   		});

   		let finalList = [];

   		for(let i = 0; i < pickedCards.length; i++){
   			card = pickedCards[i];

   			if(finalList.length == 0) {
   				finalList.push(card);
   			} else {
   				let lastItem = finalList[finalList.length - 1];

	   			if(lastItem.name == card.name){
	   				lastItem.amount += card.amount;
	   			} else {
	   				finalList.push(card);
	   			}
   			}
   		}

   		pickedCards = finalList;

   		pickedCards.forEach( (card) => {
   			let amount = (card.amount && card.amount > 1) ? " x" + card.amount : ""
   			$('.mobile-view__card-list').append('<li class = "mobile-view__list-item"><div class = "mobile-view__list-item-name">' + card.name + '</div><div class = "mobile-view__list-item-amount">' + amount + '</div><div class = "mobile-view__list-item-cost">' + card.cost + '</div></li>');
   		});
	}

	function initCards(){
		packsArray = [];
		let _pack;
		let _round;
		<% @cards.each do |round| %>
			_round = [];
			<% round.each do |pack| %>
				_pack = [];
				<% pack.each do |card| %>
					_pack.push({
						name: '<%= card.name %>',
						cost: <%= card.cost %>,
						img_url: '<%= card.card_url %>',
						rate: <%= card.rate %> 
					});
				<% end %>
				_round.push(_pack);
			<% end %>
			packsArray.push(_round);
		<% end %>

		<% @heroes.each do |hero| %>
			availableHeroes.push({
				name: '<%= hero.name %>',
				img_url: '<%= hero.card_url %>'
			});
		<% end %>

		console.log(availableHeroes);
		$('.mobile-view__draft-main').flickity();
		$('.mobile-view__draft-nav').flickity();

		drawCards();
		setUpHeroList();

		console.log(packsArray);
	}

	function emptyCardlist(){
		pickedCards = [];
		$('.card-list__list').empty();
	}

	function hideZoomCard(){
		$('.zoom-card').hide();
	}

	function selectDraftTab(){
		$('.active-tab').toggleClass('active-tab');
		$('#footer-tab-0').toggleClass('active-tab');
		$('.mobile-view__draft-container').show();
		$('.mobile-view__deck-container').hide();
		$('.mobile-view__hero-container').hide();
	}

	function selectDeckTab(){
		$('.active-tab').toggleClass('active-tab');
		$('#footer-tab-1').toggleClass('active-tab');
		$('.mobile-view__draft-container').hide();
		$('.mobile-view__deck-container').show();
		$('.mobile-view__hero-container').hide();
	}

	function selectHeroTab(){
		$('.active-tab').toggleClass('active-tab');
		$('#footer-tab-2').toggleClass('active-tab');
		$('.mobile-view__draft-container').hide();
		$('.mobile-view__deck-container').hide();
		$('.mobile-view__hero-container').show().flickity('resize');
	}

	function flickIt(){
		$('.mobile-view__draft-main').flickity({
			wrapAround: true,
			imagesLoaded: true,
			prevNextButtons: false,
			pageDots: false
		});

		$('.mobile-view__draft-nav').flickity({
			imagesLoaded: true,
			prevNextButtons: false,
			asNavFor: '.mobile-view__draft-main',
			// contain: true,
			pageDots: false
		});
	}

	function setUpHeroList(){
		availableHeroes.forEach( (hero) => {
			$('.mobile-view__hero-container').append('<div class = "mobile-view__card" ><div class = "card-img""><img src= ' + hero.img_url + '></div></div>');
		});
		console.log('setting up some heroes');
		$('.mobile-view__hero-container').flickity({
			wrapAround: true,
			imagesLoaded: true,
			prevNextButtons: false,
			pageDots: false
		});
		
	}

</script>